syntax = "proto3";

package grpc;

option go_package = "./proto";

// El servicio que maneja las solicitudes relacionadas con el piso.
service KFservice {
  // SolicitarEntrarPiso es el método para solicitar entrar al piso.
  rpc SolicitarEntrarPiso(EntrarPisoRequest) returns (EntrarPisoResponse);
  
  // SolicitarMovimiento es el método para solicitar un movimiento en el piso.
  rpc SolicitarMovimiento(MovimientoRequest) returns (MovimientoResponse);

  // SolicitarMontoDineroMercenarioDirector es el método para solicitar el monto de dinero actual entre el mercenario y el director.
  rpc SolicitarMontoDineroMercenarioDirector(MontoDineroMercenarioDirectorRequest) returns (MontoDineroResponse);

  // SolicitarMontoDineroDirectorBanco es el método para solicitar el monto de dinero actual entre el director y el banco.
  rpc SolicitarMontoDineroDirectorBanco(MontoDineroDirectorBancoRequest) returns (MontoDineroResponse);

  // SolicitarRegistroDataName es el método para solicitar registro de DataName.
  rpc SolicitarRegistroDataName(RegistroDataNameRequest) returns (RegistroDataNameResponse);

  // SolicitarRegistroNodo es el método para solicitar registro a nodo.
  rpc SolicitarHistorial(HistorialRequest) returns (HistorialResponse);
}

// EntrarPisoRequest es la solicitud para entrar al piso.
message EntrarPisoRequest {
  int32 estado = 1;  // El estado de la solicitud.
  int32 iD = 2;      // El identificador.
  string nombre = 3; // El nombre.
  int32 piso = 4;    // El Piso a cual entrar
}

// EntrarPisoResponse es la respuesta a una actualización de estado.
message EntrarPisoResponse {
  bool success = 1; // True si la actualización fue exitosa, false en caso contrario.
}

// MovimientoRequest es la solicitud para un movimiento en el piso.
message MovimientoRequest {
  int32 iD = 2;      // El identificador.
  string nombre = 3; // El nombre.
  int32 piso = 4;    // El Piso a cual entrar
  int32 mov = 5;     // Movimiento del jugador
}

// MovimientoResponse es el resultado de un movimiento.
message MovimientoResponse {
  bool success = 1; // True si  fue vive, false en caso contrario.
}


// MontoDineroMercenarioDirectorRequest es la solicitud para obtener el monto de dinero entre el mercenario y el director.
message MontoDineroMercenarioDirectorRequest {
  int32 iD = 1;      // El identificador.
  string nombre = 2; // El nombre.
}

// MontoDineroDirectorBancoRequest es la solicitud para obtener el monto de dinero entre el director y el banco.
message MontoDineroDirectorBancoRequest {
  int32 solicitud_id = 1;
}

// RegistroDataNameRequest es la solicitud para registrar DataName.
message RegistroDataNameRequest {
  int32 iD = 1;      // El identificador.
  string nombre = 2; // El nombre.
  int32 piso = 3;    // El Piso a cual entrar
  int32 mov = 4;     // Movimiento del jugador
}

// RegistroDataNameResponse es la respuesta a la solicitud de registro de DataName.
message RegistroDataNameResponse {
  bool success = 1; // True si el registro fue exitoso, false en caso contrario.
}

// RegistroNodoRequest es la solicitud para registrar un nodo.
message RegistroNodoRequest {
  int32 iD = 1;      // El identificador.
  string nombre = 2; // El nombre.
  int32 piso = 3;    // El Piso a cual entrar
  int32 mov = 4;     // Movimiento del jugador
}

// RegistroNodoResponse es la respuesta a la solicitud de registro de un nodo.
message RegistroNodoResponse {
  int32 puerto = 1; // True si el registro fue exitoso, false en caso contrario.
}


// HistorialRequest Respuesta a solicitar historial.
message HistorialRequest {
  int32 iD = 1;      // El identificador.
  string nombre = 2; // El nombre.
  int32 Piso = 3;    // piso
}

message HistorialResponse {
  int32 iD = 1;      // El identificador.
  string nombre = 2; // El nombre.
  int32 mov = 3;       // movimiento
}


// MontoDineroResponse es la respuesta a la solicitud de monto de dinero.
message MontoDineroResponse {
  double amount = 1; // El monto de dinero.
}


